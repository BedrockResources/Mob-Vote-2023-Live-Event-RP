{
	"format_version": "1.10.0",
	"particle_effect": {
		"description": {
			"identifier": "mule:easter_egg_unlock",
			"basic_render_parameters": {
				"material": "particles_blend",
				"texture": "textures/particle/confetti"
			}
		},
		"curves": {
			"variable.size": {
				"type": "bezier_chain",
				"input": "v.particle_age/v.particle_lifetime",
				"nodes": {
					"0.0": {
						"value": 0,
						"slope": 0
					},
					"1.0": {
						"value": 0,
						"slope": -3.25
					},
					"0.22": {
						"value": 1,
						"slope": 0
					}
				}
			}
		},
		"components": {
			"minecraft:emitter_rate_instant": {
				"num_particles": 50
			},
			"minecraft:emitter_lifetime_once": {
				"active_time": 1
			},
			"minecraft:emitter_lifetime_events": {
				"creation_event": "birth"
			},
			"minecraft:emitter_shape_box": {
				"offset": [0, 0.4, 0],
				"half_dimensions": [0.4, 0.4, 0.4],
				"direction": ["math.random(-1,1)", 1, "math.random(-1,1)"]
			},
			"minecraft:particle_lifetime_expression": {
				"max_lifetime": "math.random(4,6)"
			},
			"minecraft:particle_initial_spin": {
				"rotation": "math.random(-45,45)"
			},
			"minecraft:particle_initial_speed": "math.random(4,6)",
			"minecraft:particle_motion_dynamic": {
				"linear_acceleration": [0, -5, 0],
				"linear_drag_coefficient": 1
			},
			"minecraft:particle_appearance_billboard": {
				"size": ["0.2*variable.size", "0.2*variable.size"],
				"facing_camera_mode": "rotate_xyz",
				"uv": {
					"texture_width": 384,
					"texture_height": 36,
					"flipbook": {
						"base_UV": ["math.round(variable.particle_random_2*12)*12", "math.round(variable.particle_random_1*2)*12"],
						"size_UV": [12, 12],
						"step_UV": [12, 0],
						"frames_per_second": 16,
						"max_frame": 16,
						"loop": true
					}
				}
			},
			"minecraft:particle_motion_collision": {
				"collision_drag": 0.25,
				"coefficient_of_restitution": 0.3,
				"collision_radius": 0.1
			}
		},
		"events": {
			"birth": {
				"particle_effect": {
					"effect": "mule:easter_egg_unlock_sparkle",
					"type": "emitter_bound"
				}
			}
		}
	}
}